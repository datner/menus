generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Restaurant {
  id         Int              @id @default(autoincrement())
  slug       String           @unique
  logo       String
  identifier String           @unique
  content    RestaurantI18L[]
  menu       Menu?
  orders     Order[]
  categories Category[]
  inventory  Item[]
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @default(now()) @updatedAt
}

model RestaurantI18L {
  id           Int        @id @default(autoincrement())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  locale       Locale
  name         String
}

model Menu {
  id           Int        @id @default(autoincrement())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int        @unique
  identifier   String     @unique
  categories   Category[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now()) @updatedAt
}

model Category {
  id           Int            @id @default(autoincrement())
  menu         Menu           @relation(fields: [menuId], references: [id])
  menuId       Int
  restaurant   Restaurant     @relation(fields: [restaurantId], references: [id])
  restaurantId Int            @unique
  identifier   String         @unique
  content      CategoryI18L[]
  items        Item[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now()) @updatedAt
}

model CategoryI18L {
  id          Int      @id @default(autoincrement())
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  locale      Locale
  name        String
  description String
}

model Item {
  id           Int         @id @default(autoincrement())
  price        Int
  identifier   String
  image        String
  content      ItemI18L[]
  orderItems   OrderItem[]
  category     Category    @relation(fields: [categoryId], references: [id])
  categoryId   Int
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId Int         @unique
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now()) @updatedAt
}

model ItemI18L {
  id          Int    @id @default(autoincrement())
  item        Item   @relation(fields: [itemId], references: [id])
  itemId      Int
  locale      Locale
  name        String
  description String
}

model Order {
  id           Int         @id @default(autoincrement())
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  table        String
  fulilled     Boolean     @default(false)
  deleted      Boolean     @default(false)
  identifier   String      @unique
  orderItems   OrderItem[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now()) @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  fulilled  Boolean  @default(false)
  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

enum Locale {
  en
  he
}
